//process table 13th entry contains user stack pointer UPTR
//In UPTR we store SP of user stack
[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+13]=SP;

//process table 11th entry contains user area page number
//Where it contains kernal stack and we equate it to SP
SP=[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+11]*512-1;

//backing up used registers to current running process User Area Page
backup;

//gets currrent running process PID using status table
alias currentPID R0;
currentPID=[SYSTEM_STATUS_TABLE+1];

//gets process table entry using currentPID
alias process_table_entry R1;
process_table_entry = PROCESS_TABLE + currentPID*16;

//Updates kernal stack pointer of running process in process table
[process_table_entry + 4] = READY;

call SCHEDULER;

restore;
SP=[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+13];
ireturn;


