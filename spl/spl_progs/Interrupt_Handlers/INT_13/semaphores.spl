alias userSP R10;
userSP = SP;

//Switching Stacks
[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+13]=SP;
SP=[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+11]*512-1;

alias functionNum R9;
functionNum = [[PTBR+2*((userSP-5)/512)]*512+(userSP-5)%512];


//Semget
if(functionNum == 17) then
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9] = 17;
	alias i R11;
	i = 0;
	alias pid R12;
	pid = [SYSTEM_STATUS_TABEL+1];
	alias ind R13;
	ind = -1;
	
	//pre-process table
	while(i<8) do
		if([[PROCESS_TABLE+pid*16+11]*512+2*i+496] == -1) then
			ind = i;
			break;
		endif;
		i = i+1;
	endwhile;
	if(ind == -1) then
		R0 = -1;
		[[PTBR+2*((userSP-1)/512)]*512 + (userSP-1)%512]=R0;
		SP = userSP;
		[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9] = 0;
		ireturn;
	endif;
	
	//Resource indentifier for semaphore
	[[PROCESS_TABLE +pid*16+11]*512+2*ind+496]=1;
	multipush(R9,R10,R11,R12,R13);
	//Semaphore
	R1 = 6;
	R2 = pid;
	call RESOURCE_MANAGER;
	multipop(R9,R10,R11,R12,R13);
	
	if(R0 = -1) then
		R0 = -2;
		[[PTBR+2*((userSP-1)/512)]*512 + (userSP-1)%512]=R0;
		SP = userSP;
		[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9] = 0;
		ireturn;
	endif;
	
	[[PROCESS_TABLE +pid*16+11]*512+2*ind+1+496]=R0;
	R0 = ind;
	[[PTBR+2*((userSP-1)/512)]*512 + (userSP-1)%512]=R0;
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9] = 0;
endif;

//Semrelease
if(functionNum == 18) then
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9] = 18;
	alias semID R11;
	alias pid R12;
	pid = [SYSTEM_STATUS_TABLE+1];
	semID = [[PTBR+2*((userSP-4)/512)]*512 + (userSP-4)%512];
	
	//Invalid semID
	if(semID <0 || semID > 7) then
		R0 = -1;
		[[PTBR+2*((userSP-1)/512)]*512 + (userSP-1)%512] = R0;
		SP = userSP;
		[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9] = 0;
		ireturn;
	endif;
	
	if([[PROCESS_TABLE+pid*16+11]*512+2*semID+496] != 1) then
		R0 = -1;
		[[PTBR+2*((userSP-1)/512)]*512 + (userSP-1)%512] = R0;
		SP = userSP;
		[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9] = 0;
		ireturn;
	endif;
	
	multipush(R9,R10,R11,R12,R13);
	//Release Semaphore
	R1 = 7;
	R2 = pid;
	R3 = [[PROCESS_TABLE +pid*16+11]*512+2*semID+1+496];
	call RESOURCE_MANAGER;
	multipop(R9,R10,R11,R12,R13);
	[[PROCESS_TABLE +pid*16+11]*512+2*semID+496]=-1;
    	[[PROCESS_TABLE +pid*16+11]*512+2*semID+1+496]=-1;
    	R0=0;
    	[[PTBR+2*((userSP-1)/512)]*512 + (userSP-1)%512]=R0;
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0; 
endif;

SP = userSP;
ireturn;
