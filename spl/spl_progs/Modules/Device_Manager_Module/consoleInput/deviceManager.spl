alias functionNum R1;
alias currentPID R2;

if(functionNum == 3) then
	multipush(R0,R1,R2,R3);
	R1=8;
	R2=[SYSTEM_STATUS_TABLE+1];
	//Calling Module 0 for acquire terminal
	call RESOURCE_MANAGER;
	multipop(R0,R1,R2,R3);
	alias word R3;
	print word;
	multipush(R0,R1,R2,R3);
	R1=9;
	R2=[SYSTEM_STATUS_TABLE+1];
	//Calling Module 0 for releasing terminal
	call RESOURCE_MANAGER;
	multipop(R0,R1,R2,R3);
endif;

if(functionNum == 4) then	
	multipush(R0,R1,R2,R3);
	R1=8;
	R2=[SYSTEM_STATUS_TABLE+1];
	//Calling Module 0 for acquire terminal
	call RESOURCE_MANAGER;
	multipop(R0,R1,R2,R3);
	breakpoint;
	read;
	[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+4] = WAIT_TERMINAL;
	multipush(R0,R1,R2,R3);
	//Calls scheduler to run other processes till this process releases terminal
	call SCHEDULER;
	multipop(R0,R1,R2,R3);
	alias wordAddress R3;
	//Storing word from input buffer to R3
	[[PTBR+2*((wordAddress)/512)]*512+((wordAddress)%512)] = [PROCESS_TABLE+(currentPID*16)+8];
	breakpoint;
endif;

return;

