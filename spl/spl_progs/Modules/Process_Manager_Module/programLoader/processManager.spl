alias functionNum R1;
alias currentPID R2;

//Free User Area Page
if(functionNum == 2) then
	alias userPage R3;
	userPage = [PROCESS_TABLE+currentPID*16+11];
	multipush(R0,R1,R2,R3);
	R1 = 2;
	R2 = userPage;
	//Calling Release page in Memory Manager Module
	call MEMORY_MANAGER;
	multipop(R0,R1,R2,R3);
endif;

//Exit
if(functionNum == 3) then
	multipush(R0,R1,R2,R3);
	R1 = 4;
	R2 = currentPID;
	//Calling Free Page Table in Process Manager Module
	call PROCESS_MANAGER;
	multipop(R0,R1,R2,R3);
	multipush(R0,R1,R2,R3);
	R1 = 2;
	R2 = currentPID;
	//Calling Free User Area Page in Process Manager Module
	call PROCESS_MANAGER;
	multipop(R0,R1,R2,R3);
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4] = TERMINATED;
endif;

//Free Page Table
if(functionNum == 4) then
	PTBR = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+14];
	PTLR = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+15];
	[PTBR+0] = -1;
	[PTBR+1] = "0000";
	[PTBR+2] = -1;
	[PTBR+3] = "0000";
	alias i R3;
	i = 2;
	while(i<PTLR) do
		if([PTBR+i*2] != -1) then
			multipush(R0,R1,R2,R3);
			R1 = 2;
			R2 = [PTBR+i*2];
			//Calling Release page in Memory Manager Module
			call MEMORY_MANAGER;
			multipop(R0,R1,R2,R3);
			[PTBR+i*2+1] = "0000";
		endif;
		i = i+1;
	endwhile;
endif;

return;
